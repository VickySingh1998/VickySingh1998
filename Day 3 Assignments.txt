Q2. Move files from one folder to the respective folders

$ touch abc.txt def.txt ghi.txt jkl.txt
$ ls
abc.txt  def.txt  ghi.txt  jkl.txt

$ for file in `ls *.txt`;
> do
> echo $file
> done
abc.txt
def.txt
ghi.txt
jkl.txt

$ for file in `ls *.txt`;
> do
> folderName=`echo $file | awk -F. '{print $1}'`;
> echo $folderName;
> done
abc
def
ghi
jkl

$ for file in `ls *.txt`;
> do
> folderName=`echo $file | awk -F. '{print $1}'`;
> mkdir $folderName;
> done

$ ls -p
abc/  abc.txt  def/  def.txt  ghi/  ghi.txt  jkl/  jkl.txt  ls/

$ for file in `ls *.txt`;
> do
> folderName=`echo $file | awk -F. '{print $1}'`;
> rm -r $folderName;
> mkdir $folderName;
> mv $file $folderName;
> done

$ ls abc def ghi jkl
abc:
abc.txt

def:
def.txt

ghi:
ghi.txt

jkl:
jkl.txt



Q3. Append current data to all log files name which has clear                      

Q4. Check if folder exists or not. If it's not present, create it

#!/bin/bash -x
echo "Youtube"
if [ ! -d "Youtube" ]
then
        echo "folder does not exist";
        mkdir ./Youtube;
        echo "folder created";
else
        echo "folder already exists";
fi


$ ./check.sh
+ echo Youtube
Youtube
+ '[' '!' -d Youtube ']'
+ echo 'folder does not exist'
folder does not exist
+ mkdir ./Youtube               (folder created successfully)

$ ./check.sh
+ echo Youtube
Youtube
+ '[' '!' -d Youtube ']'
+ echo 'folder already exists'
folder already exists            (when we try to run the shell again it's saying folder already exists)

Q5. Print last 4 frequently access urls count in sorted order from /var/log/httpd/access.log

$ cat access.log

Q6. Data analysis / manipulation (AWK)

i)

$ cat data.csv

$ cat data.csv | awk '{print $2 " " $4}'
EmployeeName BasePay
NATHANIEL 167411
GARY 155966
ALBERT 212739
CHRISTOPHER 77916
PATRICK 134401
DAVID 118602
ALSON 92492
DAVID 256576
JOANNE 285262
PATRICIA 99722
EDWARD 294580

ii)
a) 

$ cat data.csv | grep -i CAPTAIN
2  GARY         CAPTAIN         155966  245131      137811   538909   538909
3  ALBERT       CAPTAIN         212739  106088      16452    335279   335279
12 PATRICIA     CAPTAIN         99722   87082       110804   297608   297608

b) To print the sum of total pay of all captains

$ cat data.csv | grep -i CAPTAIN | awk '{sum+=$7} END{print sum}' (to print the sum of total pay of all captains)
1171796

To print aggregate TotalPay of total pay of all captains:-

$ cat data.csv | grep -i CAPTAIN | awk '{sum+=$7} END{print sum/NR}'
390599

iv) Print average base pay

$ cat data.csv | awk '{sum+=$4} END{print sum/NR}'
157972





 

